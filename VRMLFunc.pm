
# VRMLFunc.pm, generated by VRMLC.pm. DO NOT MODIFY, MODIFY VRMLC.pm INSTEAD
package VRML::VRMLFunc;
require DynaLoader;
@ISA=DynaLoader;
bootstrap VRML::VRMLFunc;
sub load_data {
	my $n = \%VRML::CNodes;
 {
		my $s = '';
		my $v = get_Appearance_offsets($s);
		@{$n->{Appearance}{Offs}}{"texture","texturetransform","material","_end_"} =
			unpack("i*",$s);
		$n->{Appearance}{Virt} = $v;
 }
	 {
		my $s = '';
		my $v = get_Shape_offsets($s);
		@{$n->{Shape}{Offs}}{"appearance","geometry","_end_"} =
			unpack("i*",$s);
		$n->{Shape}{Virt} = $v;
 }
	 {
		my $s = '';
		my $v = get_Viewpoint_offsets($s);
		@{$n->{Viewpoint}{Offs}}{"fieldOfView","description","isBound","position","set_bind","bindTime","jump","orientation","_end_"} =
			unpack("i*",$s);
		$n->{Viewpoint}{Virt} = $v;
 }
	 {
		my $s = '';
		my $v = get_Cone_offsets($s);
		@{$n->{Cone}{Offs}}{"height","bottomRadius","side","bottom","_end_"} =
			unpack("i*",$s);
		$n->{Cone}{Virt} = $v;
 }
	 {
		my $s = '';
		my $v = get_Sphere_offsets($s);
		@{$n->{Sphere}{Offs}}{"radius","_end_"} =
			unpack("i*",$s);
		$n->{Sphere}{Virt} = $v;
 }
	 {
		my $s = '';
		my $v = get_Coordinate_offsets($s);
		@{$n->{Coordinate}{Offs}}{"point","_end_"} =
			unpack("i*",$s);
		$n->{Coordinate}{Virt} = $v;
 }
	 {
		my $s = '';
		my $v = get_Box_offsets($s);
		@{$n->{Box}{Offs}}{"size","_end_"} =
			unpack("i*",$s);
		$n->{Box}{Virt} = $v;
 }
	 {
		my $s = '';
		my $v = get_Cylinder_offsets($s);
		@{$n->{Cylinder}{Offs}}{"radius","height","top","side","bottom","_end_"} =
			unpack("i*",$s);
		$n->{Cylinder}{Virt} = $v;
 }
	 {
		my $s = '';
		my $v = get_IndexedFaceSet_offsets($s);
		@{$n->{IndexedFaceSet}{Offs}}{"creaseAngle","solid","coord","coordIndex","_end_"} =
			unpack("i*",$s);
		$n->{IndexedFaceSet}{Virt} = $v;
 }
	 {
		my $s = '';
		my $v = get_Transform_offsets($s);
		@{$n->{Transform}{Offs}}{"rotation","scale","children","translation","_end_"} =
			unpack("i*",$s);
		$n->{Transform}{Virt} = $v;
 }
	 {
		my $s = '';
		my $v = get_Group_offsets($s);
		@{$n->{Group}{Offs}}{"children","bboxCenter","bboxSize","_end_"} =
			unpack("i*",$s);
		$n->{Group}{Virt} = $v;
 }
	 {
		my $s = '';
		my $v = get_ElevationGrid_offsets($s);
		@{$n->{ElevationGrid}{Offs}}{"zDimension","height","xDimension","_end_"} =
			unpack("i*",$s);
		$n->{ElevationGrid}{Virt} = $v;
 }
	 {
		my $s = '';
		my $v = get_Material_offsets($s);
		@{$n->{Material}{Offs}}{"transparency","emissiveColor","shininess","diffuseColor","specularColor","ambientIntensity","_end_"} =
			unpack("i*",$s);
		$n->{Material}{Virt} = $v;
 }
	
}
